<!DOCTYPE html>
<html lang="zh-CN">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>视频URL解析器</title>
    <style>
        :root {
            --primary-color: #4a90e2;
            --secondary-color: #f5f5f5;
            --text-color: #333;
            --border-radius: 8px;
            --box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: var(--secondary-color);
            margin: 0;
            padding: 20px;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            color: var(--text-color);
        }

        .wrapper {
            display: grid;
            grid-template-columns: 250px 1fr 250px;
            gap: 20px;
            max-width: 1200px;
            width: 100%;
        }

        .sidebar {
            background-color: white;
            padding: 20px;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
        }

        .sidebar h2 {
            font-size: 1.2em;
            margin-bottom: 15px;
            color: var(--primary-color);
        }

        .sidebar table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0 8px;
        }

        .sidebar th, .sidebar td {
            text-align: left;
            padding: 8px;
        }

        .sidebar tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        .container {
            background-color: white;
            padding: 30px;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
            text-align: center;
        }

        .container h1 {
            font-size: 1.8em;
            margin-bottom: 20px;
            color: var(--primary-color);
        }

        .input-group {
            display: flex;
            margin-bottom: 20px;
        }

        .input-group input {
            flex-grow: 1;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: var(--border-radius) 0 0 var(--border-radius);
            font-size: 1em;
        }

        .input-group button {
            padding: 10px 20px;
            background-color: var(--primary-color);
            color: white;
            border: none;
            border-radius: 0 var(--border-radius) var(--border-radius) 0;
            cursor: pointer;
            font-size: 1em;
            transition: background-color 0.3s;
        }

        .input-group button:hover {
            background-color: #3a7bc8;
        }

        #loadingIndicator {
            font-size: 1em;
            color: var(--primary-color);
            margin-top: 20px;
            display: none;
        }

        #videoCover {
            max-width: 100%;
            border-radius: var(--border-radius);
            margin-top: 20px;
            display: none;
            box-shadow: var(--box-shadow);
        }

        .actions {
            margin-top: 20px;
            display: flex;
            justify-content: center;
            gap: 10px;
        }

        .actions button {
            padding: 10px 20px;
            background-color: var(--primary-color);
            color: white;
            border: none;
            border-radius: var(--border-radius);
            cursor: pointer;
            font-size: 1em;
            transition: background-color 0.3s;
            display: none;
        }

        .actions button:hover {
            background-color: #3a7bc8;
        }

        /* 历史记录样式 */
        #historyPage {
            display: none;
            background-color: white;
            padding: 20px;
            border-radius: var(--border-radius);
            box-shadow: var(--box-shadow);
        }

        .history-item {
            display: flex;
            align-items: center;
            padding: 10px;
            border-bottom: 1px solid #eee;
        }

        .history-item img {
            width: 80px;
            height: 80px;
            object-fit: cover;
            border-radius: var(--border-radius);
            margin-right: 15px;
        }

        .history-item-content {
            flex-grow: 1;
        }

        .history-item-title {
            font-weight: bold;
            margin-bottom: 5px;
        }

        .history-item-actions {
            display: flex;
            gap: 10px;
        }

        .history-item-actions button {
            padding: 5px 10px;
            background-color: var(--primary-color);
            color: white;
            border: none;
            border-radius: var(--border-radius);
            cursor: pointer;
            font-size: 0.9em;
        }

        .nav-buttons {
            display: flex;
            justify-content: center;
            margin-top: 20px;
            gap: 10px;
        }

        .nav-buttons button {
            padding: 10px 20px;
            background-color: var(--primary-color);
            color: white;
            border: none;
            border-radius: var(--border-radius);
            cursor: pointer;
            font-size: 1em;
        }

        @media (max-width: 1024px) {
            .wrapper {
                grid-template-columns: 1fr;
            }

            .sidebar {
                display: none;
            }
        }
    </style>
</head>
<body>
    <div class="wrapper">
        <div class="sidebar">
            <h2>支持的视频平台</h2>
            <table>
                <tr><th>平台</th><th>状态</th></tr>
                <tr><td>抖音短视频</td><td>✔</td></tr>
                <tr><td>快手短视频</td><td>✔</td></tr>
                <tr><td>皮皮虾</td><td>✔</td></tr>
                <tr><td>微视短视频</td><td>✔</td></tr>
                <tr><td>西瓜视频</td><td>✔</td></tr>
            </table>
        </div>

        <div class="container" id="mainPage">
            <h1>视频分享链接解析器</h1>
            <div class="input-group">
                <input type="text" id="videoLink" placeholder="输入视频分享链接">
                <button onclick="parseVideoURL()">解析</button>
            </div>
            
            <div id="loadingIndicator">解析中，请稍候...</div>
            
            <img id="videoCover" alt="Video Cover">
            <div class="actions">
                <button id="openVideoBtn">打开视频</button>
                <button id="copyLinkBtn">复制链接</button>
            </div>

            <div class="nav-buttons">
                <button onclick="showHistoryPage()">查看历史记录</button>
            </div>
        </div>

        <div id="historyPage">
            <h1>历史记录</h1>
            <div id="historyList"></div>
            <div class="nav-buttons">
                <button onclick="showMainPage()">返回主页</button>
            </div>
        </div>

        <div class="sidebar">
            <h2>支持的图集平台</h2>
            <table>
                <tr><th>平台</th><th>状态</th></tr>
                <tr><td>抖音</td><td>✔</td></tr>
                <tr><td>快手</td><td>✔</td></tr>
            </table>
        </div>
    </div>

    <script>
        let history = JSON.parse(localStorage.getItem('videoHistory')) || [];

        function showMainPage() {
            document.getElementById('mainPage').style.display = 'block';
            document.getElementById('historyPage').style.display = 'none';
        }

        function showHistoryPage() {
            document.getElementById('mainPage').style.display = 'none';
            document.getElementById('historyPage').style.display = 'block';
            displayHistory();
        }

        function displayHistory() {
            const historyList = document.getElementById('historyList');
            historyList.innerHTML = '';
            history.forEach((item, index) => {
                const historyItem = document.createElement('div');
                historyItem.className = 'history-item';
                historyItem.innerHTML = `
                    <img src="${item.coverUrl}" alt="Video Cover">
                    <div class="history-item-content">
                        <div class="history-item-title">${item.title || '未知标题'}</div>
                        <div class="history-item-actions">
                            <button onclick="openVideo('${item.videoUrl}')">复制链接</button>
                            <button onclick="deleteHistoryItem(${index})">删除</button>
                        </div>
                    </div>
                `;
                historyList.appendChild(historyItem);
            });
        }

        function openVideo(url) {
            navigator.clipboard.writeText(url).then(() => {
                alert('视频链接已复制到剪贴板');
            }).catch(err => {
                console.error('复制失败:', err);
                alert('复制失败，请手动复制链接');
            });
        }

        function deleteHistoryItem(index) {
            history.splice(index, 1);
            localStorage.setItem('videoHistory', JSON.stringify(history));
            displayHistory();
        }

        async function parseVideoURL() {
            const url = document.getElementById('videoLink').value;
            const loadingIndicator = document.getElementById('loadingIndicator');
            const videoCover = document.getElementById('videoCover');
            const openVideoBtn = document.getElementById('openVideoBtn');
            const copyLinkBtn = document.getElementById('copyLinkBtn');

            if (!url) {
                alert('请输入视频链接');
                return;
            }

            loadingIndicator.style.display = 'block';
            videoCover.style.display = 'none';
            openVideoBtn.style.display = 'none';
            copyLinkBtn.style.display = 'none';

            try {
                const baseUrl = window.location.origin;
                const apiUrl = `${baseUrl}/video/share/url/parse?url=${encodeURIComponent(url)}`;

                const response = await fetch(apiUrl);
                if (!response.ok) throw new Error('网络响应不正常');

                const data = await response.json();
                const { video_url: videoUrl, cover_url: videoCoverUrl, title } = data.data;

                if (videoUrl && videoCoverUrl) {
                    videoCover.src = videoCoverUrl;
                    videoCover.style.display = 'block';
                    openVideoBtn.style.display = 'inline-block';
                    copyLinkBtn.style.display = 'inline-block';

                    openVideoBtn.onclick = () => window.open(videoUrl, '_blank');
                    copyLinkBtn.onclick = async () => {
                        try {
                            await navigator.clipboard.writeText(videoUrl);
                            alert('视频链接已复制到剪贴板');
                        } catch (err) {
                            console.error('复制失败:', err);
                            alert('复制失败，请手动复制链接');
                        }
                    };

                    // 添加到历史记录
                    history.unshift({ videoUrl, coverUrl: videoCoverUrl, title });
                    if (history.length > 20) history.pop(); // 限制历史记录数量
                    localStorage.setItem('videoHistory', JSON.stringify(history));
                } else {
                    throw new Error('未找到视频封面或视频链接');
                }
            } catch (error) {
                alert(`解析视频链接时发生错误: ${error.message}`);
            } finally {
                loadingIndicator.style.display = 'none';
            }
        }

        // 添加回车键触发解析功能
        document.getElementById('videoLink').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                parseVideoURL();
            }
        });

        // 初始化显示主页
        showMainPage();
    </script>
</body>
</html>
